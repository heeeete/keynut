"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@next-auth";
exports.ids = ["vendor-chunks/@next-auth"];
exports.modules = {

/***/ "(rsc)/../../.yarn/__virtual__/@next-auth-mongodb-adapter-virtual-e12b2dc1b3/2/.yarn/berry/cache/@next-auth-mongodb-adapter-npm-1.1.3-6178eb3396-10c0.zip/node_modules/@next-auth/mongodb-adapter/dist/index.js":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ../../.yarn/__virtual__/@next-auth-mongodb-adapter-virtual-e12b2dc1b3/2/.yarn/berry/cache/@next-auth-mongodb-adapter-npm-1.1.3-6178eb3396-10c0.zip/node_modules/@next-auth/mongodb-adapter/dist/index.js ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MongoDBAdapter = exports._id = exports.format = exports.defaultCollections = void 0;\n/**\n * <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", padding: 16}}>\n *  <p style={{fontWeight: \"normal\"}}>Official <a href=\"https://www.mongodb.com\">MongoDB</a> adapter for Auth.js / NextAuth.js.</p>\n *  <a href=\"https://www.mongodb.com\">\n *   <img style={{display: \"block\"}} src=\"https://authjs.dev/img/adapters/mongodb.svg\" width=\"30\" />\n *  </a>\n * </div>\n *\n * ## Installation\n *\n * ```bash npm2yarn2pnpm\n * npm install next-auth @next-auth/mongodb-adapter mongodb\n * ```\n *\n * @module @next-auth/mongodb-adapter\n */\nconst mongodb_1 = __webpack_require__(/*! mongodb */ \"mongodb\");\nexports.defaultCollections = {\n    Users: \"users\",\n    Accounts: \"accounts\",\n    Sessions: \"sessions\",\n    VerificationTokens: \"verification_tokens\",\n};\nexports.format = {\n    /** Takes a mongoDB object and returns a plain old JavaScript object */\n    from(object) {\n        const newObject = {};\n        for (const key in object) {\n            const value = object[key];\n            if (key === \"_id\") {\n                newObject.id = value.toHexString();\n            }\n            else if (key === \"userId\") {\n                newObject[key] = value.toHexString();\n            }\n            else {\n                newObject[key] = value;\n            }\n        }\n        return newObject;\n    },\n    /** Takes a plain old JavaScript object and turns it into a mongoDB object */\n    to(object) {\n        const newObject = {\n            _id: _id(object.id),\n        };\n        for (const key in object) {\n            const value = object[key];\n            if (key === \"userId\")\n                newObject[key] = _id(value);\n            else if (key === \"id\")\n                continue;\n            else\n                newObject[key] = value;\n        }\n        return newObject;\n    },\n};\n/** @internal */\nfunction _id(hex) {\n    if ((hex === null || hex === void 0 ? void 0 : hex.length) !== 24)\n        return new mongodb_1.ObjectId();\n    return new mongodb_1.ObjectId(hex);\n}\nexports._id = _id;\n/**\n * ## Setup\n *\n * The MongoDB adapter does not handle connections automatically, so you will have to make sure that you pass the Adapter a `MongoClient` that is connected already. Below you can see an example how to do this.\n *\n * ### Add the MongoDB client\n *\n * ```ts\n * // This approach is taken from https://github.com/vercel/next.js/tree/canary/examples/with-mongodb\n * import { MongoClient } from \"mongodb\"\n *\n * if (!process.env.MONGODB_URI) {\n *   throw new Error('Invalid/Missing environment variable: \"MONGODB_URI\"')\n * }\n *\n * const uri = process.env.MONGODB_URI\n * const options = {}\n *\n * let client\n * let clientPromise: Promise<MongoClient>\n *\n * if (process.env.NODE_ENV === \"development\") {\n *   // In development mode, use a global variable so that the value\n *   // is preserved across module reloads caused by HMR (Hot Module Replacement).\n *   if (!global._mongoClientPromise) {\n *     client = new MongoClient(uri, options)\n *     global._mongoClientPromise = client.connect()\n *   }\n *   clientPromise = global._mongoClientPromise\n * } else {\n *   // In production mode, it's best to not use a global variable.\n *   client = new MongoClient(uri, options)\n *   clientPromise = client.connect()\n * }\n *\n * // Export a module-scoped MongoClient promise. By doing this in a\n * // separate module, the client can be shared across functions.\n * export default clientPromise\n * ```\n *\n * ### Configure Auth.js\n *\n * ```js\n * import NextAuth from \"next-auth\"\n * import { MongoDBAdapter } from \"@next-auth/mongodb-adapter\"\n * import clientPromise from \"../../../lib/mongodb\"\n *\n * // For more information on each option (and a full list of options) go to\n * // https://authjs.dev/reference/providers/oauth\n * export default NextAuth({\n *   adapter: MongoDBAdapter(clientPromise),\n *   ...\n * })\n * ```\n **/\nfunction MongoDBAdapter(client, options = {}) {\n    const { collections } = options;\n    const { from, to } = exports.format;\n    const db = (async () => {\n        const _db = (await client).db(options.databaseName);\n        const c = { ...exports.defaultCollections, ...collections };\n        return {\n            U: _db.collection(c.Users),\n            A: _db.collection(c.Accounts),\n            S: _db.collection(c.Sessions),\n            V: _db.collection(c === null || c === void 0 ? void 0 : c.VerificationTokens),\n        };\n    })();\n    return {\n        async createUser(data) {\n            const user = to(data);\n            await (await db).U.insertOne(user);\n            return from(user);\n        },\n        async getUser(id) {\n            const user = await (await db).U.findOne({ _id: _id(id) });\n            if (!user)\n                return null;\n            return from(user);\n        },\n        async getUserByEmail(email) {\n            const user = await (await db).U.findOne({ email });\n            if (!user)\n                return null;\n            return from(user);\n        },\n        async getUserByAccount(provider_providerAccountId) {\n            const account = await (await db).A.findOne(provider_providerAccountId);\n            if (!account)\n                return null;\n            const user = await (await db).U.findOne({ _id: new mongodb_1.ObjectId(account.userId) });\n            if (!user)\n                return null;\n            return from(user);\n        },\n        async updateUser(data) {\n            const { _id, ...user } = to(data);\n            const result = await (await db).U.findOneAndUpdate({ _id }, { $set: user }, { returnDocument: \"after\" });\n            return from(result.value);\n        },\n        async deleteUser(id) {\n            const userId = _id(id);\n            const m = await db;\n            await Promise.all([\n                m.A.deleteMany({ userId: userId }),\n                m.S.deleteMany({ userId: userId }),\n                m.U.deleteOne({ _id: userId }),\n            ]);\n        },\n        linkAccount: async (data) => {\n            const account = to(data);\n            await (await db).A.insertOne(account);\n            return account;\n        },\n        async unlinkAccount(provider_providerAccountId) {\n            const { value: account } = await (await db).A.findOneAndDelete(provider_providerAccountId);\n            return from(account);\n        },\n        async getSessionAndUser(sessionToken) {\n            const session = await (await db).S.findOne({ sessionToken });\n            if (!session)\n                return null;\n            const user = await (await db).U.findOne({ _id: new mongodb_1.ObjectId(session.userId) });\n            if (!user)\n                return null;\n            return {\n                user: from(user),\n                session: from(session),\n            };\n        },\n        async createSession(data) {\n            const session = to(data);\n            await (await db).S.insertOne(session);\n            return from(session);\n        },\n        async updateSession(data) {\n            const { _id, ...session } = to(data);\n            const result = await (await db).S.findOneAndUpdate({ sessionToken: session.sessionToken }, { $set: session }, { returnDocument: \"after\" });\n            return from(result.value);\n        },\n        async deleteSession(sessionToken) {\n            const { value: session } = await (await db).S.findOneAndDelete({\n                sessionToken,\n            });\n            return from(session);\n        },\n        async createVerificationToken(data) {\n            await (await db).V.insertOne(to(data));\n            return data;\n        },\n        async useVerificationToken(identifier_token) {\n            const { value: verificationToken } = await (await db).V.findOneAndDelete(identifier_token);\n            if (!verificationToken)\n                return null;\n            // @ts-expect-error\n            delete verificationToken._id;\n            return verificationToken;\n        },\n    };\n}\nexports.MongoDBAdapter = MongoDBAdapter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../.yarn/__virtual__/@next-auth-mongodb-adapter-virtual-e12b2dc1b3/2/.yarn/berry/cache/@next-auth-mongodb-adapter-npm-1.1.3-6178eb3396-10c0.zip/node_modules/@next-auth/mongodb-adapter/dist/index.js\n");

/***/ })

};
;